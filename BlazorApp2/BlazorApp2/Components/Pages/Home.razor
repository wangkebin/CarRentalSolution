@page "/"
@using BlazorApp2.Services
@using CarRental.Application.DTOs
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject UserState UserState

<PageTitle>Home</PageTitle>

<h1>Please sign in to continue</h1>
<div class="form-group">
    <label for="username">Username:</label>
    <input type="text" id="username" class="form-control" @bind="username" />
    <label for="password">Password:</label>
    <input type="password" id="password" class="form-control" @bind="password" />
    <button class="btn btn-primary mt-2" @onclick="HandleSubmit">Submit</button>

</div>
<p>Debug: Username is @username</p>
<p>Debug: UserState.Username is @UserState.Username</p>


@code {
    private string username = "";
    private string password = "";
    private IEnumerable<CustomerDTO> customers = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadCustomers();
    }
    
    private void HandleSubmit()
    {
        Console.WriteLine($"HandleSubmit called. Username: {username}");
        var customer = customers.FirstOrDefault(c => c.FirstName + " " + c.LastName == username);
        if (customer != null &&  customer.Id > 0){
            UserState.CustomerId = customer.Id;
            UserState.Username = customer.FirstName + " " + customer.LastName;
            Console.WriteLine($"UserState.Username set to: {UserState.Username}");
 
        // Here you would typically validate the username and password
        // For this example, we'll just navigate to the Car component

            NavigationManager.NavigateTo($"/Reservations");
        }
    }

    private async Task LoadCustomers()
    {
        try
        {
            customers = await HttpClient.GetFromJsonAsync<IEnumerable<CustomerDTO>>("http://localhost:5001/api/Customer");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading cars: {ex.Message}");
            // You might want to show an error message to the user here
        }
    }
}


